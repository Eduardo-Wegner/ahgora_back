{"version":3,"sources":["views/authorize.js","views/list.js","views/search.js","views/container/Frame.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Auth","state","isOpen","url","authorized","searchParam","URLSearchParams","window","location","search","console","log","get","this","setState","error","params","origin","fetch","then","data","json","res","open","Box","my","style","backgroundColor","height","width","Grid","container","direction","justify","alignItems","item","xs","Button","variant","color","onClick","auth","disabled","Component","List_video","props","list","map","tile","index","className","display","flexWrap","justifyContent","overflow","GridList","transform","cols","GridListTile","key","title","src","thumbnail","alt","GridListTileBar","actionIcon","IconButton","aria-label","Search","hours_perday","loading","get_props","result","bgColor","spinnerColor","textColor","text","border","borderColor","marginLeft","p","ml","InputBase","placeholder","onChange","target","value","inputProps","TextField","fullWidth","id","label","type","min","max","pb","Typography","minutes_per_day","total_duration_days","total_duration_minutes","titles","replace","descriptions","frame","get_list","list_video","Container","maxWidth","App","Frame","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.92bf0da2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Container,Box, Button,Grid,Modal} from '@material-ui/core/';\n\nclass Auth extends Component{\n    constructor(){\n        super()\n\n        this.state={\n            isOpen:false,\n            url:'',\n            authorized:false\n        }\n    }\n\n    componentDidMount(){\n        let searchParam = new URLSearchParams(window.location.search)\n        try {\n            console.log(searchParam.get('authorized'))    \n            if(searchParam.get('authorized')){\n                this.setState({authorized:true})\n            }\n        } catch (error) {\n            throw(error)\n        }\n    }\n\n    auth(params) {\n        let url = window.location.origin + '/authorize';\n        console.log(url)\n        let aux;\n        fetch(url).then((data)=>data.json()).then((res)=>{\n            console.log(res)\n            window.open(res.url,\"_self\")\n        })\n    }\n\n    render(){\n        return(\n              <Box  my={0} style={{ backgroundColor: '#ddee00', height: '100px', width:'100%'}}>\n                <Grid container direction='row' justify='space-between' alignItems=\"center\" style={{height:'100%', width:'98%'}} >\n                    <Grid item xs={'auto'} alignItems=\"center\">\n                        <h1>Google Authorize</h1>\n                    </Grid>\n                    <Grid item xs={'auto'} justify=\"center\" alignItems=\"center\" >\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>this.auth()} disabled={this.state.authorized}>{this.state.authorized? 'Authorized':'Authorize'} </Button>\n                    </Grid>\n                </Grid>\n                \n              </Box>\n            \n        );\n    }\n}\n\nexport default Auth;","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport {Container,\n    Box,\n    Button,\n    Grid,\n    Modal,\n    GridList,\n    GridListTile,\n    GridListTileBar} from '@material-ui/core/';\n\nclass List_video extends Component{\n    constructor(){\n        super()\n\n        this.state={\n            isOpen:false,\n            data:[]\n        }\n    }\n\n    componentDidMount(){\n        console.log(this.props.list)\n        this.setState({data:this.props.list})\n    }\n\n    componentWillReceiveProps(){\n        console.log(this.props.list)\n        this.setState({data:this.props.list})\n    }\n\n    auth(params) {\n        let url = window.location.origin + '/authorize';\n        console.log(url)\n        let aux;\n        fetch(url).then((data)=>data.json()).then((res)=>{\n            console.log(res)\n            window.open(res.url,\"_self\")\n        })\n    }\n\n    render(){\n      if (this.state.data !='') {\n        return(\n          <div style={{\n              // display: 'flex',\n              // flexWrap: 'wrap',\n              // justifyContent: 'space-around',\n              // overflow: 'hidden',\n              backgroundColor: 'black',\n            }}>\n       {this.state.data.map((tile, index) => (\n          <div className={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              justifyContent: 'space-around',\n              overflow: 'hidden',\n              backgroundColor: 'black',\n            }}><h3 style={{color:'white'}} >Day: {index+1}</h3>\n          <GridList style={{flexWrap: 'nowrap',transform: 'translateZ(0)'}} cols={3}>\n            {tile.map((tile, index) => (\n              <GridListTile key={tile.title}>\n                <img src={tile.thumbnail} alt={tile.title} />\n                <GridListTileBar\n                  title={tile.title}\n\n                  actionIcon={\n                    <IconButton aria-label={`star ${tile.title}`}>\n                      <StarBorderIcon />\n                    </IconButton>\n                  }\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n          </div>\n      ))}\n        </div>\n          \n      );\n      }else{\n        return(<div></div>)\n      }\n       \n    }\n}\n\nexport default List_video;","import React, { Component } from 'react';\nimport List from './list';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Container,Box, form, TextField,InputBase,Grid} from '@material-ui/core/';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LoadingScreen from 'react-loading-screen'\n\nclass Search extends Component{\n    constructor(){\n        super()\n\n        this.state={\n            hours_perday:1,\n            search:'',\n            authorized:false,\n            list:[],\n            loading:false\n        }\n    }\n\n    componentDidMount(){\n        let searchParam = new URLSearchParams(window.location.search),\n        parent_props = this.props.get_props;\n\n        try {\n            console.log(searchParam.get('authorized'))    \n            if(searchParam.get('authorized')){\n                this.setState({authorized:true})\n            }\n        } catch (error) {\n            throw(error)\n        }\n    }\n\n\n    search() {\n        this.props.get_props([])\n        this.setState({loading:!this.state.loading})\n        let url = window.location.origin + '/search?search='+this.state.search+'&daily_time='+this.state.hours_perday;\n        this.setState({list:[]})\n        console.log(url)\n        fetch(url).then(data=>data.json()).then(res=>{\n            this.setState({list:res})\n            this.setState({loading:!this.state.loading})\n            this.props.get_props(res.result)\n            console.log(res)\n        })\n    }\n\n    render(){\n        return(\n            <LoadingScreen\n            loading={this.state.loading}\n            bgColor='rgba(241, 241, 241,0.4)'\n            spinnerColor='#9ee5f8'\n            textColor='#000'\n            text='LoAdInG.:.:.:.:.'>\n              <Box my={2} style={{backgroundColor:\"#feefaa\", height:this.state.list!=''?'300px':'150px'}} border={2} borderColor='black' display=\"block\" justify='center'>\n                <h2 style={{marginLeft:'20px'}} >SEARCH VIDEO</h2>\n                <Grid container direction='row' alignItems=\"center\" style={{width:'98%', height:'50px'}} p={3}>\n                    <Grid item xs={9} alignItems=\"center\" ml={5}>\n                        <Box ml={2} >\n                            <InputBase placeholder='Search videos' onChange={(res)=>this.setState({search:res.target.value})} inputProps={{ 'aria-label': 'Search Youtube Videos' }} style={{width:'95%',backgroundColor:'rgba(0,0,0,0.2)'}} />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={2} justify=\"space-between\">\n                        <TextField\n                            fullWidth={true}\n                            variant=\"outlined\"\n                            id=\"hour-day\"\n                            label=\"Minutos por dia | 0 ~ 1439\"\n                            type=\"number\"\n                            min='1'\n                            max='1439'\n                            value={this.state.hours_perday}\n                            onChange={(res)=>{\n                                if(res.target.value >= 0 && res.target.value <= 1439){\n                                    this.setState({hours_perday:res.target.value})\n                                }\n                            }} pb={5} />\n                        \n                    </Grid>\n                    <Grid item xs={1} justify=\"space-between\">\n                        <IconButton type=\"submit\" aria-label=\"search\" onClick={()=>this.search()}>\n                            <SearchIcon />\n                        </IconButton>\n                    </Grid>\n                </Grid>{this.state.list!='' &&\n                    <Box>\n                        <Typography><br/>Minutes per DAY: {this.state.list.minutes_per_day}</Typography>\n                        <Typography>Total Days: {this.state.list.total_duration_days}</Typography>\n                        <Typography>Total Minutes: {this.state.list.total_duration_minutes}</Typography>\n                        <Typography>5 most used words in TITLE: {this.state.list.titles.replace(/[,]/g,' | ')}</Typography>\n                        <Typography>5 most used words in DESCRIPTIONS: {this.state.list.descriptions.replace(/,/g,' | ')}</Typography>\n                    </Box>\n                        }\n              </Box>\n              </LoadingScreen>\n        );\n    }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Container,Box} from '@material-ui/core/';\nimport Auth from '../authorize';\nimport Search from '../search';\nimport List from '../list';\n\n\nclass frame extends Component{\n\n    constructor(){\n        super();\n\n        this.state = {\n            list_video:[],\n            loading:false\n        }\n    }\n\n    get_list = (list) => {\n        console.log(list)\n        this.setState({list_video:list})\n    }\n\n    render(){\n        return(\n              <Container style={{backgroundColor:\"#000\", height:'100%'}} maxWidth='xl' >\n               <Auth/>\n               <Search get_props={this.get_list}/>  \n               {this.state.list_video!='' && <List list={this.state.list_video}/>}             \n              </Container>\n        );\n    }\n}\n\nexport default frame;","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Container, Grid} from '@material-ui/core/';\nimport logo from './logo.svg';\nimport Frame from './views/container/Frame';\nimport Auth from './views/authorize';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Grid container direction=\"column\" justify=\"center\" alignItems='stretch' style={{backgroundColor:'#000',width:'100%', height:'100%'}} >\n        <Frame></Frame>\n      </Grid>\n     \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}